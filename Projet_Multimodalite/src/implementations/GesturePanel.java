/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package implementations;

import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.geom.Point2D;

/**
 *
 * @author kerbrase
 */
public class GesturePanel extends javax.swing.JPanel {

    private Stroke myStroke;
    private GestureRecognition recognition;
    
    private String currentTemplateName;

    public GesturePanel() {
        initComponents();
        MouseAdapter adapter = new MouseAdapter() {
            @Override
            public void mouseDragged(MouseEvent e) {
                recognition.mouseDragged(new Point2D.Double(e.getPoint().x, e.getPoint().y));
                updateStroke();
            }

            @Override
            public void mousePressed(MouseEvent e) {
                recognition.mousePressed(new Point2D.Double(e.getPoint().x, e.getPoint().y));
                updateStroke();
            }

            @Override
            public void mouseReleased(MouseEvent e) {
                recognition.mouseReleased(new Point2D.Double(e.getPoint().x, e.getPoint().y));
                updateStroke();
            }
        };
        addMouseListener(adapter);
        addMouseMotionListener(adapter);
    }

    public void updateStroke() {
        myStroke = recognition.getCurrentStroke();
        repaint();
    }

    @Override
    public void paint(Graphics _g) {
        super.paint(_g);
        Graphics2D g = (Graphics2D) _g;
        if (myStroke != null) {
            int[] xPoints = new int[myStroke.size()];
            int[] yPoints = new int[myStroke.size()];
            for (int i = 0; i < myStroke.size(); i++) {
                xPoints[i] = (int) Math.round(myStroke.getPoint(i).x);
                yPoints[i] = (int) Math.round(myStroke.getPoint(i).y);
            }
            
            g.drawPolyline(xPoints, yPoints, myStroke.size());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    /**
     * @param recognition the recognition to set
     */
    public void setRecognition(GestureRecognition recognition) {
        this.recognition = recognition;
    }

    /**
     * @param currentTemplateName the currentTemplateName to set
     */
    public void setCurrentTemplateName(String currentTemplateName) {
        //recognition.currentTemplateName = currentTemplateName;
    }
}
